{"entries":[{"timestamp":1745174916694,"editorVersion":"2.0.48","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":17,"diffs":[[1,""]]},{"start1":45,"length1":269,"diffs":[[1,"browserEvents.MouseLeft.onEvent(browserEvents.MouseButtonEvent.Pressed, function(x: number, y: number) {\n    for (let item of uiElements) {\n        if (item.boundingBox.IsPositionInBoundingBox(x, y)) {\n            item.OnClick()\n        }\n    }\n})\n"]]},{"start1":3167,"length1":3617,"diffs":[[1,"let mySprite = sprites.create(img`\n    3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n`, SpriteKind.Player)\nlet mySprite2 = sprites.create(img`\n    3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111122211111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111211121111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111112111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111112111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111112111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111112111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111121111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111221111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111122211111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111222222221111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n`, SpriteKind.Player)\nmySprite2.setPosition(80, 100)\n"]]},{"start1":6674,"length1":188,"diffs":[[1,"const testFunction = () => {\n    console.log(\"Hello you clicked space button\")\n}\nconst testFunction2 = () => {\n    console.log(\"Hello you clicked second space button\")\n}\n"]]},{"start1":6845,"length1":114,"diffs":[[1,"let uiElements: UIElement[] = [new UIElement(mySprite, testFunction), new UIElement(mySprite2, testFunction2)]"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":287,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1745174916693,"editorVersion":"2.0.48","text":{"main.ts":"console.consoleOverlay.consoleDisplay(true)\n\nbrowserEvents.MouseLeft.onEvent(browserEvents.MouseButtonEvent.Pressed, function(x: number, y: number) {\n    for (let item of uiElements) {\n        if (item.boundingBox.IsPositionInBoundingBox(x, y)) {\n            item.OnClick()\n        }\n    }\n})\n\nclass UIPage {\n    static instances: UIPage[] = []\n    public elements: UIElement[]\n    \n    constructor(elements: UIElement[]) {\n        this.elements = elements\n        UIPage.instances.push(this)\n    }\n\n    static SwitchScreen(newPage: UIPage) {\n        for (let page of UIPage.instances) {\n            page.HidePage()\n        }\n        newPage.ShowPage()\n    }\n\n    public HidePage() {\n        for (let element of this.elements) {\n            element.Hide()\n        }\n    }\n\n    public ShowPage() {\n        for (let element of this.elements) {\n            element.Show()\n        }\n    }\n}\n\nclass UIElement {\n    static instances: UIElement[] = []\n    public boundingBox: BoundingBox\n    public sprite: Sprite\n    public onClick: Function\n    private isButton: boolean\n    private hidden: boolean\n\n    constructor(sprite: Sprite, onClick?: Function) {\n        this.sprite = sprite\n        this.boundingBox = new BoundingBox(sprite)\n\n        if (onClick != null) {\n            this.isButton = true\n            this.onClick = onClick\n        } else {\n            this.isButton = false\n        }\n        \n        this.hidden = false\n        UIElement.instances.push(this)\n    }\n\n    public OnClick() {\n        if (!this.hidden && this.isButton){\n            this.onClick()\n        }\n    }\n\n    public Hide() {\n        this.hidden = true\n        this.sprite.setFlag(SpriteFlag.Invisible, true)\n    }\n\n    public Show() {\n        this.hidden = false\n        this.sprite.setFlag(SpriteFlag.Invisible, false)\n    }\n}\n\nclass BoundingBox {\n    public xMin: number\n    public xMax: number\n    public yMin: number\n    public yMax: number\n\n    constructor(sprite?: Sprite, xMin?: number, xMax?: number, yMin?: number, yMax?: number) {\n        if (!xMin || !xMax || !yMin || !yMax) {\n            this.CalculateBoundingBox(sprite)\n        } else {\n            this.xMin = xMin\n            this.xMax = xMax\n            this.yMin = yMin\n            this.yMax = yMax\n        }\n    }\n\n    public CalculateBoundingBox(sprite: Sprite) {\n        this.xMin = sprite.x - (sprite.width / 2)\n        this.xMax = sprite.x + (sprite.width / 2)\n        this.yMin = sprite.y - (sprite.height / 2)\n        this.yMax = sprite.y + (sprite.height / 2)\n    }\n\n    public IsPositionInBoundingBox(x: number, y: number): boolean {\n        return (x > this.xMin && x < this.xMax) && (y > this.yMin && y < this.yMax)\n    }\n}\n\n/* EXAMPLE BUTTON\n// Create sprite, any sprite works but bounding box is always going to be a rectangle\nlet mySprite = sprites.create(img`dog`)\n\n// If you want your UI element to be a button, you must assign it a function\nlet myFunc = () => { console.log(\"pressed\") }\n\n// Creates UI element, and UI page to store element\nlet myElement = new UIElement(mySprite, myFunc)\nlet myPage = new UIPage([myElement])\n\n// Switches starting screen to be your page\nUIPage.SwitchScreen(myPage)\n*/\n\nlet mySprite = sprites.create(img`\n    3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n`, SpriteKind.Player)\nlet mySprite2 = sprites.create(img`\n    3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111122211111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111211121111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111112111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111112111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111112111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111112111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111121111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111221111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111122211111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111222222221111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113\n    3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\n`, SpriteKind.Player)\nmySprite2.setPosition(80, 100)\n\nconst testFunction = () => {\n    console.log(\"Hello you clicked space button\")\n}\nconst testFunction2 = () => {\n    console.log(\"Hello you clicked second space button\")\n}\n\nlet uiElements: UIElement[] = [new UIElement(mySprite, testFunction), new UIElement(mySprite2, testFunction2)]","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"Untitled\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"browser-events\": \"*\",\n        \"Console Overlay\": \"github:meeeeeeeep1/Console-Overlay#v0.1.0\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v2.0.42\",\n        \"tag\": \"v2.0.42\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/743148c8250637afc045e41de0f1771bfc591dcc\",\n        \"target\": \"2.0.42\",\n        \"pxt\": \"11.3.50\"\n    },\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1745175033742}